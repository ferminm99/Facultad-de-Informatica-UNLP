package grupo26;

import java.util.Random;

public class EstrategaScaloni implements Estratega {
	
	private static final EstrategaScaloni instance = new EstrategaScaloni();
	private static final Estrategia focus = new EstrategaScaloni.EstrategiaFocus();
	private static final Estrategia crazy = new EstrategaScaloni.EstrategiaCrazy();
	private String estado = "crazy";
	private int cabezeadas = 0;
	
	public static Estratega getInstance() {
		return instance;
	}
	
	public Estrategia strategyForRunning(LaboRobot26 XAEA_12) {
		if (this.estado == "crazy" && XAEA_12.others > 1) {
			return EstrategaScaloni.crazy;			
		} else {
			this.estado = "focus";
			return EstrategaScaloni.focus;	
		}
	}
	
	public Estrategia strategyForOnScannedRobot(LaboRobot26 XAEA_12) {
		if (this.estado == "crazy" && XAEA_12.others > 1) {
			return EstrategaScaloni.crazy;			
		} else {
			this.estado = "focus";
			return EstrategaScaloni.focus;	
		}
	}
	
	public Estrategia strategyForOnHitByBullet(LaboRobot26 XAEA_12) {
		this.cabezeadas++;
		if (this.cabezeadas >= 3) {
			this.estado = "focus";
			this.cabezeadas = 0;
			return EstrategaScaloni.focus;
		} else {
			if (this.estado == "crazy" && XAEA_12.others > 1) {
				return EstrategaScaloni.crazy;			
			} else {
				this.estado = "focus";
				return EstrategaScaloni.focus;	
			}
		}
	}
	
	public Estrategia strategyForOnHitWall(LaboRobot26 XAEA_12) {
		if (this.estado == "crazy" && XAEA_12.others > 1) {
			return EstrategaScaloni.crazy;			
		} else {
			this.estado = "focus";
			return EstrategaScaloni.focus;	
		}
	}
	
	public Estrategia strategyForOnHitRobot(LaboRobot26 XAEA_12) {
		this.estado = "focus";
		return EstrategaScaloni.focus;
	}
	
	//Estrategia Focus
	public static class EstrategiaFocus implements Estrategia {
		private int angulo = -1;
		private int distancia = -1;
		private int anguloCuerpo = -1;
		
		public void run(LaboRobot26 XAEA_12) {
			if (this.angulo != -1) {
				double angle = Math.toRadians((this.angulo + this.anguloCuerpo) % 360);
//				int scannedX = (int)(XAEA_12.robotX + Math.sin(angle) * this.distancia);
				int scannedY = (int)(XAEA_12.robotX + Math.cos(angle) * this.distancia);
				if (this.angulo >= 180 && this.angulo <= 360) {
					if (XAEA_12.robotY <= scannedY) {
						XAEA_12.turnRight(360);
					} else {
						XAEA_12.turnLeft(360);									
					}
				} else {
					if (XAEA_12.robotY <= scannedY) {
						XAEA_12.turnRight(360);
					} else {
						XAEA_12.turnLeft(360);									
					}
				}			
			} else {
				XAEA_12.turnGunTo(XAEA_12.heading);
				XAEA_12.turnLeft(360);			
			}
		}
		
		public void onScannedRobot(LaboRobot26 XAEA_12) {
			this.angulo = XAEA_12.scannedHeading;
			this.distancia = XAEA_12.scannedDistance;
			this.anguloCuerpo = XAEA_12.scannedBearing;
			XAEA_12.turnTo(XAEA_12.scannedAngle);
			XAEA_12.fire(3);					
			XAEA_12.ahead(50);
		}
		
		public void onHitByBullet(LaboRobot26 XAEA_12) {
			XAEA_12.doNothing(1);
		}
		
		public void onHitWall(LaboRobot26 XAEA_12) {
			XAEA_12.back(100);
		}
		
		public void onHitRobot(LaboRobot26 XAEA_12) {
			XAEA_12.doNothing(1);
		}
	}
	
	//Estrategia crazy
	public static class EstrategiaCrazy implements Estrategia{
		
		public void run(LaboRobot26 XAEA_12) {
			Random random = new Random();
			int r = random.nextInt(100-1) + 1;
			System.out.println(r);
			if (r >= 50) {
				XAEA_12.turnAheadLeft((int)(XAEA_12.fieldHeight*0.30), 90);
			} else {
				XAEA_12.turnAheadRight((int)(XAEA_12.fieldHeight*0.30), 90);
			}
		}
		
		public void onScannedRobot(LaboRobot26 XAEA_12) {
			XAEA_12.fire(1);
		}
		
		public void onHitByBullet(LaboRobot26 XAEA_12) {
			XAEA_12.doNothing(1);
		}
		
		public void onHitRobot(LaboRobot26 XAEA_12) {
			XAEA_12.doNothing(1);
		}
		
		public void onHitWall(LaboRobot26 XAEA_12) {
			XAEA_12.turnBackLeft((int)(XAEA_12.fieldHeight*0.30), XAEA_12.hitWallBearing);
		}
	}
}

