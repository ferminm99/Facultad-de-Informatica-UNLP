package laboratorio;

import java.util.Random;

public class EstrategaGallardo implements Estratega {
	
	private static final EstrategaGallardo instance = new EstrategaGallardo();
	private static final Estrategia focus = new EstrategaGallardo.EstrategiaFocus();
	private static final Estrategia pared = new EstrategaGallardo.EstrategiaPared();
	private String estado = "pared";
	
	public static Estratega getInstance() {
		return instance;
	}
	
	public Estrategia strategyForRunning(LaboRobot26 XAEA_12) {
		if (this.estado == "pared" && XAEA_12.others >= 1) {
			return EstrategaGallardo.pared;			
		} else {
			this.estado = "focus";
			return EstrategaGallardo.focus;	
		}
	}
	
	public Estrategia strategyForOnScannedRobot(LaboRobot26 XAEA_12) {
		this.estado = "focus";
		return EstrategaGallardo.focus;			
	}
	
	public Estrategia strategyForOnHitByBullet(LaboRobot26 XAEA_12) {
		if (XAEA_12.others == 1) {
			this.estado = "focus";
			return EstrategaGallardo.focus;
		} else {
			if (XAEA_12.energy > 65 && this.estado == "focus") {
				return EstrategaGallardo.focus;			
			} else {
				this.estado = "pared";
				return EstrategaGallardo.pared;	
			}		
		}
	}
	
	public Estrategia strategyForOnHitWall(LaboRobot26 XAEA_12) {
		if (this.estado == "pared") {
			return EstrategaGallardo.pared;
		} else {
			return EstrategaGallardo.focus;
		}
	}
	
	public Estrategia strategyForOnHitRobot(LaboRobot26 XAEA_12) {
		if (this.estado == "pared") {
			return EstrategaGallardo.pared;
		} else {
			return EstrategaGallardo.focus;
		}
	}
	
	//Estrategia Focus
	public static class EstrategiaFocus implements Estrategia {
		private int angulo = -1;
		private int distancia = -1;
		private int anguloCuerpo = -1;
		
		public void run(LaboRobot26 XAEA_12) {
			XAEA_12.turnGunTo(XAEA_12.heading);	
//			XAEA_12.turnLeft(360);		
			double angle = Math.toRadians((this.angulo + this.anguloCuerpo) 360);
//			int scannedX = (int)(XAEA_12.robotX + Math.sin(angle) * this.distancia);
			int scannedY = (int)(XAEA_12.robotX + Math.cos(angle) * this.distancia);
			if (this.angulo >= 180 && this.angulo <= 360) {
				if (XAEA_12.robotY <= scannedY) {
					XAEA_12.turnRight(360);
				} else {
					XAEA_12.turnLeft(360);									
				}
			} else {
				if (XAEA_12.robotY <= scannedY) {
					XAEA_12.turnRight(360);
				} else {
					XAEA_12.turnLeft(360);									
				}
			}			
			 
		}
		
		public void onScannedRobot(LaboRobot26 XAEA_12) {
			this.angulo = XAEA_12.scannedHeading;
			this.distancia = XAEA_12.scannedDistance;
			this.anguloCuerpo = XAEA_12.scannedBearing;
			XAEA_12.turnTo(XAEA_12.scannedAngle);
			XAEA_12.fire(3);					
			XAEA_12.ahead(50);
		}
		
		public void onHitByBullet(LaboRobot26 XAEA_12) {
			XAEA_12.doNothing(1);
		}
		
		public void onHitWall(LaboRobot26 XAEA_12) {
			if (XAEA_12.hitWallBearing >= 170 && XAEA_12.hitWallBearing <= 185) {
				XAEA_12.ahead(100);
			} else if (XAEA_12.hitWallBearing <= -170 && XAEA_12.hitWallBearing >= -185) {
				XAEA_12.ahead(100);
			} else {
				XAEA_12.back(100);
			}
		}
		
		public void onHitRobot(LaboRobot26 XAEA_12) {
			XAEA_12.doNothing(1);
		}
	}
	
	//Estrategia pared
	public static class EstrategiaPared implements Estrategia{
		private int cabezeadas = 0; 
		protected boolean adelante = false;
		
		public void run(LaboRobot26 XAEA_12) {
			if ((XAEA_12.robotX >= XAEA_12.fieldWidth-30 && XAEA_12.robotX <= XAEA_12.fieldWidth)  || (XAEA_12.robotX >= 0 && XAEA_12.robotX <= 30)) {
				int r;
				int high;
				int low;
				Random random = new Random();
				if (XAEA_12.heading == 270) {
					XAEA_12.turnTo(360);
					high = XAEA_12.fieldHeight-XAEA_12.robotY-30;
					low = (int) (high*0.4);
					r = random.nextInt(high-low) + low;
				} else if (XAEA_12.heading == 90) {
					XAEA_12.turnTo(360);
					high = XAEA_12.fieldHeight-XAEA_12.robotY-30;
					low = (int) (high*0.4);
					r = random.nextInt(high-low) + low;
				} else {
					if (!this.adelante) {
						high = XAEA_12.fieldHeight-XAEA_12.robotY-30;
						low = (int) (high*0.4);
						r = random.nextInt(high-low) + low;	
					} else {
						high = XAEA_12.robotY-30;
						low = (int) (high*0.4);
						r = random.nextInt(high-low) + low;
					}
				}
				if (XAEA_12.robotX >= 0 && XAEA_12.robotX <= 30) {
					XAEA_12.turnGunTo(90);
				} else {
					XAEA_12.turnGunTo(270);
				}
				if (!this.adelante) {
					this.adelante = true;
					XAEA_12.ahead(r);
				} else {
					this.adelante = false;
					XAEA_12.back(r);
				}
			} else {
				if (XAEA_12.robotX >= XAEA_12.fieldWidth/2) {
					XAEA_12.turnTo(90);
					XAEA_12.ahead(XAEA_12.fieldWidth-XAEA_12.robotX-30);
				} else {
					XAEA_12.turnTo(270);
					XAEA_12.ahead(XAEA_12.robotX-30);
				}
			}
		}
		
		public void onScannedRobot(LaboRobot26 XAEA_12) {
			XAEA_12.fire(2);
		}
		
		public void onHitByBullet(LaboRobot26 XAEA_12) {
			if (this.cabezeadas >= 2) {
				this.cabezeadas = 0;
				XAEA_12.ahead(1);
				this.adelante = false;
				if (XAEA_12.robotX >= 0 && XAEA_12.robotX <= 30) {
					XAEA_12.turnTo(90);
					if (XAEA_12.robotY >= XAEA_12.fieldHeight/2) {
						XAEA_12.turnGunTo(180);
					} else {
						XAEA_12.turnGunTo(360);
					}
					XAEA_12.ahead(XAEA_12.fieldWidth-XAEA_12.robotX-30);
				} else if (XAEA_12.robotX >= XAEA_12.fieldWidth-30 && XAEA_12.robotX <= XAEA_12.fieldWidth) {
					XAEA_12.turnTo(270);
					if (XAEA_12.robotY >= XAEA_12.fieldHeight/2) {
						XAEA_12.turnGunTo(180);
					} else {
						XAEA_12.turnGunTo(360);
					}
					XAEA_12.ahead(XAEA_12.robotX-30);
				}
			} else {
				this.cabezeadas++;
			}
		}
		
		public void onHitRobot(LaboRobot26 XAEA_12) {
			XAEA_12.ahead(1);
			this.adelante = false;
			if (XAEA_12.robotX >= 0 && XAEA_12.robotX <= 30) {
				XAEA_12.turnTo(90);
				if (XAEA_12.robotY >= XAEA_12.fieldHeight/2) {
					XAEA_12.turnGunTo(180);
				} else {
					XAEA_12.turnGunTo(360);
				}
				XAEA_12.ahead(XAEA_12.fieldWidth-XAEA_12.robotX-30);
			} else if (XAEA_12.robotX >= XAEA_12.fieldWidth-30 && XAEA_12.robotX <= XAEA_12.fieldWidth) {
				XAEA_12.turnTo(270);
				if (XAEA_12.robotY >= XAEA_12.fieldHeight/2) {
					XAEA_12.turnGunTo(180);
				} else {
					XAEA_12.turnGunTo(360);
				}
				XAEA_12.ahead(XAEA_12.robotX-30);
			}
			
		}
		
		public void onHitWall(LaboRobot26 XAEA_12) {
			XAEA_12.back(100);
		}
	}
}

