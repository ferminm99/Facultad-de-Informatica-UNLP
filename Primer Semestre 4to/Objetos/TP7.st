Object subclass: #CuOOra	instanceVariableNames: 'users topics questions'	classVariableNames: ''	package: 'TP7-model'!!CuOOra methodsFor: 'adding' stamp: 'SDFirmenich 4/25/2019 12:59'!addQuestion: aQuestion forUser: aUser
	aUser addQuestion: aQuestion.
	questions add: aQuestion.! !!CuOOra methodsFor: 'adding' stamp: 'SergioFirmenich 4/22/2019 23:47'!addUser: aUser
	users add: aUser 
! !!CuOOra methodsFor: 'adding' stamp: 'SergioFirmenich 4/22/2019 23:47'!addTopic: aTopic
	topics add: aTopic 
! !!CuOOra methodsFor: 'adding' stamp: 'SergioFirmenich 4/22/2019 23:47'!addQuestion: aQuestion
	questions add: aQuestion! !!CuOOra methodsFor: 'accessing' stamp: 'SergioFirmenich 4/22/2019 23:48'!users
	^ users! !!CuOOra methodsFor: 'accessing' stamp: 'SergioFirmenich 4/22/2019 23:48'!questions
	^ questions! !!CuOOra methodsFor: 'accessing' stamp: 'SergioFirmenich 4/22/2019 23:48'!topics
	^ topics! !!CuOOra methodsFor: 'initialize' stamp: 'SergioFirmenich 4/22/2019 23:46'!initialize
	users := OrderedCollection new.
	topics := OrderedCollection new.
	questions := OrderedCollection new! !Object subclass: #Post	instanceVariableNames: 'timestamp user votes description'	classVariableNames: ''	package: 'TP7-model'!!Post methodsFor: 'private' stamp: 'Alejo 6/15/2020 11:18'!user: anObject	user := anObject! !!Post methodsFor: 'private' stamp: 'Alejo 6/15/2020 11:17'!description: anObject	description := anObject! !!Post methodsFor: 'private' stamp: 'Alejo 6/15/2020 11:18'!user	^user! !!Post methodsFor: 'public' stamp: 'Alejo 6/15/2020 11:18'!positiveVotes	^votes select: [ :vote | vote isLike ]! !!Post methodsFor: 'public' stamp: 'Alejo 6/15/2020 11:17'!negativeVotes	^votes reject: [ :vote | vote isLike].! !!Post methodsFor: 'initialization' stamp: 'Alejo 6/15/2020 11:38'!initialize: aString user: aUser	description := aString.	user:= aUser.			votes := OrderedCollection new.	timestamp := DateAndTime now.! !!Post methodsFor: 'adding' stamp: 'Alejo 6/15/2020 11:17'!addVote: aVote	votes add: aVote! !!Post methodsFor: 'accessing' stamp: 'Alejo 6/15/2020 11:17'!description	^ description! !!Post methodsFor: 'accessing' stamp: 'Alejo 6/15/2020 11:18'!timestamp	^ timestamp! !!Post methodsFor: 'accessing' stamp: 'Alejo 6/15/2020 11:19'!votes	^ votes! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Post class	instanceVariableNames: ''!!Post class methodsFor: 'instance creation' stamp: 'Alejo 6/15/2020 11:38'!new: aString user: aUser 	^ self new		initialize: aString		user: aUser.! !Post subclass: #Answer	instanceVariableNames: 'question'	classVariableNames: ''	package: 'TP7-model'!Post subclass: #Question	instanceVariableNames: 'title answers topics'	classVariableNames: ''	package: 'TP7-model'!!Question methodsFor: 'accessing' stamp: 'SDFirmenich 4/23/2019 09:54'!title
	^title ! !!Question methodsFor: 'accessing' stamp: 'SergioFirmenich 4/23/2019 00:20'!topics
	^topics ! !!Question methodsFor: 'accessing' stamp: 'SDFirmenich 4/23/2019 09:54'!title: aTitle
	title := aTitle ! !!Question methodsFor: 'public' stamp: 'Alejo 6/19/2020 18:25'!negativeVotesCount	^ self negativeVotes size! !!Question methodsFor: 'public' stamp: 'Alejo 6/19/2020 18:25'!positiveVotesCount	^ self positiveVotes size! !!Question methodsFor: 'public' stamp: 'Alejo 6/10/2020 13:16'!anteriorADias: dias	^(DateAndTime now - self timestamp) asDays < dias! !!Question methodsFor: 'adding' stamp: 'SDFirmenich 4/25/2019 13:29'!addTopic: aTopic
	topics add: aTopic.
	aTopic addQuestion: self.
! !!Question methodsFor: 'adding' stamp: 'Anonymous 6/2/2020 16:20'!addAnswer: anAnswer
	answers add: anAnswer.
! !!Question methodsFor: 'initialization' stamp: 'Alejo 6/15/2020 11:50'!initialize: aTitle description: aDescription user: aUser	self initialize: aDescription user: aUser.	self initialize.	title:= aTitle.		! !!Question methodsFor: 'private' stamp: 'Alejo 6/21/2020 16:51'!timestamp: anObject	timestamp := anObject! !!Question methodsFor: 'initalize-release' stamp: 'Alejo 6/15/2020 11:54'!initialize: aTitle description: aDescription user: aUser topic: aTopic	self initialize: aTitle description: aDescription user: aUser.	self addTopic: aTopic.	! !!Question methodsFor: 'initalize-release' stamp: 'Alejo 6/15/2020 11:51'!initialize	answers := OrderedCollection new.	topics := OrderedCollection new! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Question class	instanceVariableNames: ''!!Question class methodsFor: 'instance creation' stamp: 'Alejo 6/15/2020 11:38'!newWithTitle: title description: aDescription user: aUser	^ self new		initialize: title		description: aDescription		user: aUser! !!Question class methodsFor: 'instance creation' stamp: 'Alejo 6/15/2020 11:42'!newWithTitle: title description: aDescription user: aUser topic: aTopic	^ self new		initialize: title		description: aDescription		user: aUser		topic: aTopic		! !Object subclass: #QuestionOfInterestRetreiver	instanceVariableNames: ''	classVariableNames: ''	package: 'TP7-model'!!QuestionOfInterestRetreiver methodsFor: 'private' stamp: 'Alejo 6/20/2020 11:58'!obtenerRelevantes: aCollection	^aCollection last: (10 min: aCollection size).! !!QuestionOfInterestRetreiver methodsFor: 'private' stamp: 'Alejo 6/20/2020 11:58'!ordenarPreguntas: aCollection	^aCollection asSortedCollection: [ :a :b | a positiveVotesCount > b positiveVotesCount ].! !!QuestionOfInterestRetreiver methodsFor: 'abstract' stamp: 'Alejo 6/20/2020 11:58'!obtenerPreguntas: aUser	self subclassResponsibility.! !!QuestionOfInterestRetreiver methodsFor: 'public' stamp: 'Alejo 6/20/2020 11:55'!questionsOfInterest: aUser	^self obtenerRelevantes: (self ordenarPreguntas: (self obtenerPreguntas: aUser)).! !QuestionOfInterestRetreiver subclass: #NegativeTopicsQuestionRetreiver	instanceVariableNames: ''	classVariableNames: ''	package: 'TP7-model'!!NegativeTopicsQuestionRetreiver methodsFor: 'private' stamp: 'Alejo 6/19/2020 18:15'!obtenerPreguntas: aUser	^aUser preguntasDeOtrosEnMisTopicos.! !!NegativeTopicsQuestionRetreiver methodsFor: 'private' stamp: 'Alejo 6/19/2020 19:05'!ordenarPreguntas: aCollection	^aCollection asSortedCollection: [ :a :b | a negativeVotesCount > b negativeVotesCount ].			! !QuestionOfInterestRetreiver subclass: #SocialQuestionRetreiver	instanceVariableNames: ''	classVariableNames: ''	package: 'TP7-model'!!SocialQuestionRetreiver methodsFor: 'private' stamp: 'Alejo 6/19/2020 19:34'!obtenerRelevantes: aCollection	^aCollection first: (10 min: aCollection size).! !!SocialQuestionRetreiver methodsFor: 'private' stamp: 'Alejo 6/19/2020 19:55'!obtenerPreguntas: aUser	^aUser preguntasEInteresesDeMisSeguidos.! !Object subclass: #Topic	instanceVariableNames: 'name description questions'	classVariableNames: ''	package: 'TP7-model'!!Topic methodsFor: 'initialize' stamp: 'Alejo 6/15/2020 12:09'!initialize: aName description: aDescription	name := aName.	description := aDescription.	questions := OrderedCollection new! !!Topic methodsFor: 'accessing' stamp: 'SergioFirmenich 4/22/2019 07:42'!description
	^ description! !!Topic methodsFor: 'accessing' stamp: 'SergioFirmenich 4/22/2019 07:42'!questions
	^ questions! !!Topic methodsFor: 'accessing' stamp: 'SergioFirmenich 4/22/2019 08:14'!name
	^name! !!Topic methodsFor: 'accessing' stamp: 'SergioFirmenich 4/22/2019 07:42'!name: anObject
	name := anObject! !!Topic methodsFor: 'accessing' stamp: 'SergioFirmenich 4/22/2019 07:43'!addQuestion: aQuetion
	questions add: aQuetion ! !!Topic methodsFor: 'accessing' stamp: 'SergioFirmenich 4/22/2019 07:42'!description: anObject
	description := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Topic class	instanceVariableNames: ''!!Topic class methodsFor: 'intance creation' stamp: 'Alejo 6/15/2020 12:08'!name: aName description: aDescription	^ self new		initialize: aName		description: aDescription! !QuestionOfInterestRetreiver subclass: #TopicsQuestionRetreiver	instanceVariableNames: ''	classVariableNames: ''	package: 'TP7-model'!!TopicsQuestionRetreiver methodsFor: 'private' stamp: 'Alejo 6/19/2020 21:10'!obtenerPreguntas:  aUser	^(aUser topicosDeUltimosDias: 90)							! !Object subclass: #User	instanceVariableNames: 'questions answers username password topics following votes questionRetreiver'	classVariableNames: ''	package: 'TP7-model'!!User methodsFor: 'initialize' stamp: 'Alejo 6/15/2020 12:14'!initialize: aUsername password: aPassword	questions := OrderedCollection new.	answers := OrderedCollection new.	topics := OrderedCollection new.	following := OrderedCollection new.	votes := OrderedCollection new.	self defineInterestInSocial.	username:= aUsername.	password:= aPassword.! !!User methodsFor: 'public' stamp: 'Alejo 6/19/2020 21:10'!topicosDeUltimosDias:  dias	^self quitarMisPosteos: (self filtrar: (self preguntasDeMisTopicos) porDias: dias)! !!User methodsFor: 'public' stamp: 'Alejo 6/20/2020 12:21'!preguntasEInteresesDeMisSeguidos	^self quitarMisPosteos: (self preguntasDeMisSeguidos , self preguntasDeInteresDeMisSeguidos)! !!User methodsFor: 'public' stamp: 'Alejo 6/16/2020 13:05'!preguntasDeOtrosEnMisTopicos	^(self quitarMisPosteos: self preguntasDeMisTopicos)	! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 09:21'!addAnswer: anAnswer	answers add: anAnswer! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 09:21'!addQuestion: aQuestion	questions add: aQuestion! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 09:21'!topics	^ topics! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 09:21'!questions	^ questions! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 09:22'!following	^ following! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 10:36'!questionRetreiver	^questionRetreiver! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 09:21'!addTopic: aTopic	topics add: aTopic! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 11:11'!defineInterestInNegativeTopics	questionRetreiver := NegativeTopicsQuestionRetreiver new.! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 11:11'!defineInterestInTopics	questionRetreiver := TopicsQuestionRetreiver new! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 09:22'!follow: aUser	following add: aUser! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 11:28'!questionsOfInterest	^questionRetreiver questionsOfInterest: self.! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 09:21'!username	^ username! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 09:21'!addVote: aVote	votes add: aVote! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 11:11'!defineInterestInSocial	questionRetreiver := SocialQuestionRetreiver new! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 09:21'!answers	^ answers! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 09:21'!votes	^ votes! !!User methodsFor: 'accessing' stamp: 'Alejo 6/10/2020 09:22'!password	^ password! !!User methodsFor: 'private' stamp: 'Alejo 6/16/2020 13:03'!quitarMisPosteos: coleccionDePosteos	^(coleccionDePosteos reject: [ :post | post user = self ]) ! !!User methodsFor: 'private' stamp: 'Alejo 6/19/2020 19:38'!preguntasDeInteresDeMisSeguidos	^self following flatCollect: [ :follow | follow questionsOfInterest ]! !!User methodsFor: 'private' stamp: 'Alejo 6/21/2020 17:07'!filtrar: aCollection porDias: dias	^aCollection select: [ :q | q anteriorADias: dias ]	! !!User methodsFor: 'private' stamp: 'Alejo 6/19/2020 19:39'!preguntasDeMisSeguidos	^self following flatCollect: [ :follow | follow questions]! !!User methodsFor: 'private' stamp: 'Alejo 6/16/2020 13:05'!preguntasDeMisTopicos	^(topics flatCollect: [ :topic | topic questions ])	! !!User methodsFor: 'private' stamp: 'Alejo 6/10/2020 09:21'!username: anObject	username := anObject! !!User methodsFor: 'private' stamp: 'Alejo 6/10/2020 09:21'!password: anObject	password := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!User class	instanceVariableNames: ''!!User class methodsFor: 'instance-creation' stamp: 'Alejo 6/15/2020 12:15'!username: aUsername password: aPassword	^ self new initialize: aUsername password: aPassword! !Object subclass: #Vote	instanceVariableNames: 'isLike timstamp publication user timestamp'	classVariableNames: ''	package: 'TP7-model'!!Vote methodsFor: 'accessing' stamp: 'SergioFirmenich 4/22/2019 14:47'!publication
	^ publication! !!Vote methodsFor: 'accessing' stamp: 'SergioFirmenich 4/22/2019 14:47'!isLike
	^ isLike! !!Vote methodsFor: 'accessing' stamp: 'SergioFirmenich 4/22/2019 14:47'!user
	^ user! !!Vote methodsFor: 'initialization' stamp: 'Alejo 6/15/2020 12:49'!initialize: aUser dislikesPublication: aPublication	self initialize: aUser publication: aPublication.	self dislike.! !!Vote methodsFor: 'initialization' stamp: 'Alejo 6/15/2020 12:49'!initialize: aUser likesPublication: aPublication	self initialize: aUser publication: aPublication.	isLike := true.	! !!Vote methodsFor: 'private' stamp: 'SergioFirmenich 4/22/2019 14:47'!user: anObject
	user := anObject! !!Vote methodsFor: 'private' stamp: 'SergioFirmenich 4/22/2019 23:37'!like
	isLike := true.! !!Vote methodsFor: 'private' stamp: 'SergioFirmenich 4/22/2019 14:50'!dislike
	isLike := false.! !!Vote methodsFor: 'private' stamp: 'SergioFirmenich 4/22/2019 14:47'!publication: anObject
	publication := anObject! !!Vote methodsFor: 'initialize' stamp: 'Alejo 6/15/2020 12:48'!initialize: aUser publication: aPublication	user:= aUser.		publication:= aPublication.	timstamp := DateAndTime now! !!Vote methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/2/2020 16:30'!toggle
	isLike := isLike not.! !!Vote methodsFor: 'initialization - private' stamp: 'Alejo 6/15/2020 12:40'!intialize: aUser value: aBoolean	user := aUser.	isLike := aBoolean.	timestamp := DateAndTime now! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Vote class	instanceVariableNames: ''!!Vote class methodsFor: 'instance creation simple' stamp: 'Alejo 6/15/2020 12:41'!negative: aUser	^ self new intialize: aUser value: false! !!Vote class methodsFor: 'instance creation' stamp: 'Alejo 6/15/2020 12:42'!user: aUser dislikesPublication: aPublication	^ self new		initialize: aUser		dislikesPublication: aPublication! !!Vote class methodsFor: 'instance creation' stamp: 'Alejo 6/15/2020 12:41'!positive: aUser	^ self new intialize: aUser value: true! !!Vote class methodsFor: 'instance creation' stamp: 'Alejo 6/15/2020 12:40'!user: aUser likesPublication: aPublication	^ self new		initialize: aUser		likesPublication: aPublication! !TestCase subclass: #AnswerTest	instanceVariableNames: 'answerWithoutVotes'	classVariableNames: ''	package: 'TP7-tests'!!AnswerTest methodsFor: 'setup' stamp: 'Anonymous 6/2/2020 16:17'!setUp
	answerWithoutVotes := Answer new:'An answer'  user:(User new).! !!AnswerTest methodsFor: 'testing' stamp: 'Alejo 6/10/2020 09:26'!testNegativeVotes	answerWithoutVotes		addVote: (Vote user: User new likesPublication: answerWithoutVotes).	self assert: answerWithoutVotes positiveVotes size equals: 1.	answerWithoutVotes		addVote: (Vote user: User new likesPublication: answerWithoutVotes).	self assert: answerWithoutVotes positiveVotes size equals: 2! !!AnswerTest methodsFor: 'testing' stamp: 'Alejo 6/10/2020 09:27'!testPositiveVotes	self assert: answerWithoutVotes positiveVotes isEmpty.	answerWithoutVotes		addVote: (Vote user: User new dislikesPublication: answerWithoutVotes).	self assert: answerWithoutVotes positiveVotes isEmpty.	answerWithoutVotes		addVote: (Vote user: User new likesPublication: answerWithoutVotes).	self assert: answerWithoutVotes positiveVotes size equals: 1.	answerWithoutVotes		addVote: (Vote user: User new likesPublication: answerWithoutVotes).	self assert: answerWithoutVotes positiveVotes size equals: 2.	answerWithoutVotes		addVote: (Vote user: User new dislikesPublication: answerWithoutVotes).	self assert: answerWithoutVotes positiveVotes size equals: 2! !!AnswerTest methodsFor: 'testing' stamp: 'Alejo 6/10/2020 09:27'!testVotesForNewAnswer	self assert: answerWithoutVotes negativeVotes size equals: 0.	self assert: answerWithoutVotes positiveVotes size equals: 0! !!AnswerTest methodsFor: 'testing' stamp: 'Alejo 6/10/2020 09:26'!testPositiveAndNegativeVotesInterference	answerWithoutVotes		addVote: (Vote user: User new dislikesPublication: answerWithoutVotes).	self assert: answerWithoutVotes positiveVotes size equals: 0.	answerWithoutVotes		addVote: (Vote user: User new likesPublication: answerWithoutVotes).	self assert: answerWithoutVotes positiveVotes size equals: 1.	answerWithoutVotes		addVote: (Vote user: User new likesPublication: answerWithoutVotes).	self assert: answerWithoutVotes positiveVotes size equals: 2.	answerWithoutVotes		addVote: (Vote user: User new dislikesPublication: answerWithoutVotes).	self assert: answerWithoutVotes positiveVotes size equals: 2.	self assert: answerWithoutVotes votes size equals: 4! !TestCase subclass: #QuestionTest	instanceVariableNames: 'questionWithoutVotes'	classVariableNames: ''	package: 'TP7-tests'!!QuestionTest methodsFor: 'set up' stamp: 'Alejo 6/15/2020 11:35'!setUp	questionWithoutVotes := Question		newWithTitle: 'A question'		description: 'A description'		user: User new! !!QuestionTest methodsFor: 'testing' stamp: 'Alejo 6/10/2020 09:26'!testNegativeVotes	questionWithoutVotes		addVote: (Vote user: User new dislikesPublication: questionWithoutVotes).	self assert: questionWithoutVotes negativeVotes size equals: 1.	questionWithoutVotes		addVote: (Vote user: User new dislikesPublication: questionWithoutVotes).	self assert: questionWithoutVotes negativeVotes size equals: 2! !!QuestionTest methodsFor: 'testing' stamp: 'Alejo 6/10/2020 09:26'!testPositiveVotes	questionWithoutVotes		addVote: (Vote user: User new likesPublication: questionWithoutVotes).	self assert: questionWithoutVotes positiveVotes size equals: 1.	questionWithoutVotes		addVote: (Vote user: User new likesPublication: questionWithoutVotes).	self assert: questionWithoutVotes positiveVotes size equals: 2! !!QuestionTest methodsFor: 'testing' stamp: 'Alejo 6/10/2020 09:26'!testVotesForNewQuestion	self assert: questionWithoutVotes negativeVotes size equals: 0.	self assert: questionWithoutVotes positiveVotes size equals: 0! !!QuestionTest methodsFor: 'testing' stamp: 'Alejo 6/10/2020 09:26'!testPositiveAndNegativeVotesInterference	questionWithoutVotes		addVote: (Vote user: User new dislikesPublication: questionWithoutVotes).	self assert: questionWithoutVotes positiveVotes size equals: 0.	self assert: questionWithoutVotes negativeVotes size equals: 1.	questionWithoutVotes		addVote: (Vote user: User new likesPublication: questionWithoutVotes).	self assert: questionWithoutVotes positiveVotes size equals: 1.	self assert: questionWithoutVotes negativeVotes size equals: 1.	self assert: questionWithoutVotes votes size equals: 2! !TestCase subclass: #UserTest	instanceVariableNames: 'cuoora user1 user2 user3 topicOO1 topicOO2 questionUser1TopicOO1 questionUser3TopicOO2 questionUser2TopicOO1 question2User2TopicOO1 question3User2TopicOO1'	classVariableNames: ''	package: 'TP7-tests'!!UserTest methodsFor: 'set up' stamp: 'Alejo 6/10/2020 11:28'!setUp	user1 := User username: 'Diego' password: ''.	user2 := User username: 'Sergio' password: ''.	user3 := User username: 'Leandro' password: ''.	user1		follow: user2;		follow: user3.	topicOO1 := Topic		name: 'OO1'		description: 'This topic is for discussing about OO1 issues'.	topicOO2 := Topic		name: 'OO2'		description: 'This topic is for discussing about OO2 issues'.	user1 addTopic: topicOO1.	user2 addTopic: topicOO2.	user3 addTopic: topicOO2.	cuoora := CuOOra new.	cuoora		addUser: user1;		addUser: user2;		addUser: user3.	questionUser1TopicOO1 := Question		newWithTitle: 'How to create a class in Pharo'		description: ''		user: user1		topic: topicOO1.	questionUser1TopicOO1		addVote: (Vote user: user2 dislikesPublication: questionUser1TopicOO1).	questionUser3TopicOO2 := Question		newWithTitle: 'How to create a WAComponent for...'		description: ''		user: user3		topic: topicOO2.	questionUser3TopicOO2		addVote: (Vote user: user1 dislikesPublication: questionUser3TopicOO2).	questionUser3TopicOO2		addVote: (Vote user: user2 likesPublication: questionUser3TopicOO2).	questionUser2TopicOO1 := Question		newWithTitle: 'How to create a subclass in Pharo'		description: ''		user: user2		topic: topicOO1.	questionUser2TopicOO1		addVote: (Vote user: user1 dislikesPublication: questionUser2TopicOO1).	question2User2TopicOO1 := Question		newWithTitle: 'How to modify a method in Pharo'		description: ''		user: user2		topic: topicOO1.	question2User2TopicOO1		addVote: (Vote user: user1 dislikesPublication: question2User2TopicOO1).	question2User2TopicOO1		addVote: (Vote user: user3 dislikesPublication: question2User2TopicOO1).	question3User2TopicOO1 := Question		newWithTitle: 'How to modify a method in Pharo'		description: ''		user: user2		topic: topicOO1.	question3User2TopicOO1		addVote: (Vote user: user3 likesPublication: question3User2TopicOO1).	cuoora addQuestion: questionUser1TopicOO1 forUser: user1.	cuoora addQuestion: questionUser3TopicOO2 forUser: user3.	cuoora addQuestion: questionUser2TopicOO1 forUser: user2.	cuoora addQuestion: question2User2TopicOO1 forUser: user2.	cuoora addQuestion: question3User2TopicOO1 forUser: user3! !!UserTest methodsFor: 'testing' stamp: 'Alejo 6/10/2020 11:32'!testNegativeTopicsRetrieveQuestions	| questionUser2TopicOO2 |	user1 defineInterestInNegativeTopics.	user2 defineInterestInNegativeTopics.	user3 defineInterestInNegativeTopics.	self assert: user1 questionsOfInterest size equals: 3.	self assert: user2 questionsOfInterest size equals: 1.	self assert: user3 questionsOfInterest size equals: 0.	questionUser2TopicOO2 := Question		newWithTitle: 'Which bad smell...?'		description: ''		user: user2		topic: topicOO2.	cuoora addQuestion: questionUser2TopicOO2 forUser: user2.	self assert: user2 questionsOfInterest size equals: 1.	self assert: user3 questionsOfInterest size equals: 1.	self		assert: user3 questionsOfInterest first		equals: questionUser2TopicOO2.	self assert: user1 questionsOfInterest size equals: 3! !!UserTest methodsFor: 'testing' stamp: 'Alejo 6/10/2020 09:25'!testSocialRetrieveQuestions	| questionUser2TopicOO2 |	self assert: user1 questionsOfInterest size equals: 4.	self		assert: user1 questionsOfInterest first		equals: questionUser3TopicOO2.	self assert: user2 questionsOfInterest size equals: 0.	self assert: user3 questionsOfInterest size equals: 0.	questionUser2TopicOO2 := Question		newWithTitle: 'Which bad smell...?'		description: ''		user: user2		topic: topicOO2.	questionUser2TopicOO2		addVote: (Vote user: user2 dislikesPublication: questionUser2TopicOO2).	cuoora addQuestion: questionUser2TopicOO2 forUser: user2.	self assert: user1 questionsOfInterest size equals: 5.	self		assert: user1 questionsOfInterest last		equals: question2User2TopicOO1.	self assert: user3 questionsOfInterest size equals: 0.	self assert: user2 questionsOfInterest size equals: 0! !!UserTest methodsFor: 'testing' stamp: 'Alejo 6/10/2020 09:26'!testTopicsRetrieveQuestions	| questionUser2TopicOO2 |	user1 defineInterestInTopics.	user2 defineInterestInTopics.	user3 defineInterestInTopics.	self assert: user1 questionsOfInterest size equals: 3.	self assert: user2 questionsOfInterest size equals: 1.	self assert: user3 questionsOfInterest size equals: 0.	questionUser2TopicOO2 := Question		newWithTitle: 'Which bad smell...?'		description: ''		user: user2		topic: topicOO2.	cuoora addQuestion: questionUser2TopicOO2 forUser: user2.	self assert: user2 questionsOfInterest size equals: 1.	self assert: user3 questionsOfInterest size equals: 1.	self		assert: user3 questionsOfInterest first		equals: questionUser2TopicOO2.	self assert: user1 questionsOfInterest size equals: 3! !